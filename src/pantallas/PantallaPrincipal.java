/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas;

/*import comun.InicializarCombo;
 import controlador.ExpertoCalcular;
 import controlador.ExpertoRecibo;
 import controlador.ExpertoVendedor;
 import dto.DtoCheque;
 import dto.DtoFactura;
 import dto.DtoRecibo;
 import dto.DtoVendedor;
 import excepciones.ExcepcionesComunes;*/
import comun.ConversorStringDate;
import comun.InicializarCombo;
import comun.MostrarMensaje;
import controlador.ExpertoRemito;
import dto.DtoRemito;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author maquina0
 */
public class PantallaPrincipal extends javax.swing.JFrame {

    private Calendar calendar;
    private ExpertoRemito expertoRemito;
    List<DtoRemito> remitos = new ArrayList<>();

    /**
     * Creates new form PantallaPrincipal
     */
    public PantallaPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
        expertoRemito = new ExpertoRemito();
        mostrarBasesDatos();
        this.calendar = Calendar.getInstance();
        crearAnioDesde(calendar.get(Calendar.YEAR));
        crearAnioHasta(calendar.get(Calendar.YEAR));
        crearMesDesde((calendar.get(Calendar.MONTH) + 1));
        crearMesHasta((calendar.get(Calendar.MONTH) + 1));
        crearDiaDesde(calendar.get(Calendar.DATE), comboMesDesde.getSelectedIndex());
        crearDiaHasta(calendar.get(Calendar.DATE), comboMesDesde.getSelectedIndex());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboBase = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboDiaDesde = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        comboMesDesde = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        comboAnioDesde = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        comboDiaHasta = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        comboMesHasta = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        comboAnioHasta = new javax.swing.JComboBox();
        consultar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        comboClientes = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRemitos = new javax.swing.JTable();
        excel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Empresa:");

        comboBase.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBaseActionPerformed(evt);
            }
        });

        jLabel2.setText("Fechas de coonsulta:");

        jLabel3.setText("Fecha desde:");

        comboDiaDesde.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDiaDesde.setNextFocusableComponent(comboAnioDesde);

        jLabel4.setText("/");

        comboMesDesde.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboMesDesde.setNextFocusableComponent(comboDiaDesde);
        comboMesDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMesDesdeActionPerformed(evt);
            }
        });

        jLabel5.setText("/");

        comboAnioDesde.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Fecha hasta:");

        comboDiaHasta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDiaHasta.setNextFocusableComponent(comboAnioHasta);

        jLabel7.setText("/");

        comboMesHasta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboMesHasta.setNextFocusableComponent(comboDiaHasta);
        comboMesHasta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMesHastaActionPerformed(evt);
            }
        });

        jLabel8.setText("/");

        comboAnioHasta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        consultar.setText("Consultar");
        consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarActionPerformed(evt);
            }
        });

        jLabel9.setText("Cliente:");

        comboClientes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClientesActionPerformed(evt);
            }
        });

        tablaRemitos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Cliente", "Nro Remito", "Fecha", "Articulo", "Cantidad", "Cant Pendiente"
            }
        ));
        jScrollPane1.setViewportView(tablaRemitos);

        excel.setText("Generar Excel");
        excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(excel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboBase, 0, 263, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(consultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(comboDiaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboMesDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboAnioDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(comboDiaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboMesHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboAnioHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 849, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(comboDiaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(comboMesDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(comboAnioDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboDiaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(comboMesHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(comboAnioHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(consultar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(excel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarActionPerformed
        // TODO add your handling code here:
        String fechaDesde, fechaHasta, cliente;
        fechaDesde = comboAnioDesde.getSelectedItem().toString() + comboMesDesde.getSelectedItem().toString() + comboDiaDesde.getSelectedItem().toString();
        fechaHasta = comboAnioHasta.getSelectedItem().toString() + comboMesHasta.getSelectedItem().toString() + comboDiaHasta.getSelectedItem().toString();
        cliente = comboClientes.getSelectedItem().toString();
        System.out.println(fechaDesde);
        System.out.println(fechaHasta);
        if (comboClientes.getSelectedItem().toString().equals("TODOS")) {
            cargarRemitos(fechaDesde, fechaHasta);
        } else {
            cargarRemitosCliente(cliente, fechaDesde, fechaHasta);
        }
    }//GEN-LAST:event_consultarActionPerformed

    private void comboMesDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMesDesdeActionPerformed
        // TODO add your handling code here:
        crearDiaDesde(calendar.get(Calendar.DATE), comboMesDesde.getSelectedIndex());
    }//GEN-LAST:event_comboMesDesdeActionPerformed

    private void comboMesHastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMesHastaActionPerformed
        // TODO add your handling code here:
        crearDiaHasta(calendar.get(Calendar.DATE), comboMesDesde.getSelectedIndex());
    }//GEN-LAST:event_comboMesHastaActionPerformed

    private void comboBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBaseActionPerformed
        // TODO add your handling code here:
        cargarClientes(comboBase.getSelectedItem().toString());
    }//GEN-LAST:event_comboBaseActionPerformed

    private void comboClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboClientesActionPerformed

    private void excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excelActionPerformed
        if (!remitos.isEmpty()) {
            try {
                String fechaDesde, fechaHasta, desde, hasta;
                fechaDesde = comboAnioDesde.getSelectedItem().toString() + "-" + comboMesDesde.getSelectedItem().toString() + "-" + comboDiaDesde.getSelectedItem().toString();
                fechaHasta = comboAnioHasta.getSelectedItem().toString() + "-" + comboMesHasta.getSelectedItem().toString() + "-" + comboDiaHasta.getSelectedItem().toString();
                desde = ConversorStringDate.formatearFecha(fechaDesde);
                hasta = ConversorStringDate.formatearFecha(fechaHasta);
                expertoRemito.guardarExcel(remitos, desde, hasta);
                MostrarMensaje.mostrarMensaje("Archivo creado con exito", new ArrayList<JFrame>());
            } catch (IOException ex) {
                MostrarMensaje.mostrarMensaje("Hubo un error al crear archivo", new ArrayList<JFrame>());
            }
        } else {
            MostrarMensaje.mostrarMensaje("Por favor, realice una consulta de remitos", new ArrayList<JFrame>());
        }
    }//GEN-LAST:event_excelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboAnioDesde;
    private javax.swing.JComboBox comboAnioHasta;
    private javax.swing.JComboBox comboBase;
    private javax.swing.JComboBox comboClientes;
    private javax.swing.JComboBox comboDiaDesde;
    private javax.swing.JComboBox comboDiaHasta;
    private javax.swing.JComboBox comboMesDesde;
    private javax.swing.JComboBox comboMesHasta;
    private javax.swing.JButton consultar;
    private javax.swing.JButton excel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaRemitos;
    // End of variables declaration//GEN-END:variables

    private void crearAnioDesde(int anio) {
        DefaultComboBoxModel defaultComboBoxModel = new DefaultComboBoxModel();
        defaultComboBoxModel.addElement(anio - 2);
        defaultComboBoxModel.addElement(anio - 1);
        defaultComboBoxModel.addElement(anio);
        defaultComboBoxModel.addElement(anio + 1);
        defaultComboBoxModel.addElement(anio + 2);
        defaultComboBoxModel.setSelectedItem(anio);
        comboAnioDesde.setModel(defaultComboBoxModel);
    }

    private void crearAnioHasta(int anio) {
        DefaultComboBoxModel defaultComboBoxModel = new DefaultComboBoxModel();
        defaultComboBoxModel.addElement(anio - 2);
        defaultComboBoxModel.addElement(anio - 1);
        defaultComboBoxModel.addElement(anio);
        defaultComboBoxModel.addElement(anio + 1);
        defaultComboBoxModel.addElement(anio + 2);
        defaultComboBoxModel.setSelectedItem(anio);
        comboAnioHasta.setModel(defaultComboBoxModel);
    }

    private void crearMesDesde(int mes) {
        DefaultComboBoxModel defaultComboBoxModel = new DefaultComboBoxModel();
        for (int recorrido = 1; recorrido < 13; recorrido++) {
            if (recorrido < 10) {
                defaultComboBoxModel.addElement("0" + recorrido);
            } else {
                defaultComboBoxModel.addElement(recorrido);
            }
        }
        if (mes < 10) {
            defaultComboBoxModel.setSelectedItem("0" + mes);
        } else {
            defaultComboBoxModel.setSelectedItem(mes);
        }
        comboMesDesde.setModel(defaultComboBoxModel);
    }

    private void crearMesHasta(int mes) {
        DefaultComboBoxModel defaultComboBoxModel = new DefaultComboBoxModel();
        for (int recorrido = 1; recorrido < 13; recorrido++) {
            if (recorrido < 10) {
                defaultComboBoxModel.addElement("0" + recorrido);
            } else {
                defaultComboBoxModel.addElement(recorrido);
            }
        }
        if (mes < 10) {
            defaultComboBoxModel.setSelectedItem("0" + mes);
        } else {
            defaultComboBoxModel.setSelectedItem(mes);
        }
        comboMesHasta.setModel(defaultComboBoxModel);
    }

    private void crearDiaDesde(int dia, int mes) {
        int maxDia;
        switch (mes) {
            case 0:
            case 2:
            case 4:
            case 6:
            case 7:
            case 9:
            case 11:
                maxDia = 31;
                break;
            case 3:
            case 5:
            case 8:
            case 10:
                maxDia = 30;
                break;
            case 1:
                int anio = Integer.valueOf(comboAnioDesde.getSelectedItem().toString());
                if (((anio % 4 == 0)
                        && !(anio % 100 == 0))
                        || (anio % 400 == 0)) {
                    maxDia = 29;
                } else {
                    maxDia = 28;
                }
                break;
            default:
                maxDia = 31;
        }
        DefaultComboBoxModel defaultComboBoxModel = new DefaultComboBoxModel();
        for (int recorrido = 1; recorrido <= maxDia; recorrido++) {
            if (recorrido < 10) {
                defaultComboBoxModel.addElement("0" + recorrido);
            } else {
                defaultComboBoxModel.addElement(recorrido);
            }
        }
        if (dia < 10) {
            defaultComboBoxModel.setSelectedItem("0" + dia);
        } else {
            defaultComboBoxModel.setSelectedItem(dia);
        }
        comboDiaDesde.setModel(defaultComboBoxModel);

    }

    private void crearDiaHasta(int dia, int mes) {
        int maxDia;
        switch (mes) {
            case 0:
            case 2:
            case 4:
            case 6:
            case 7:
            case 9:
            case 11:
                maxDia = 31;
                break;
            case 3:
            case 5:
            case 8:
            case 10:
                maxDia = 30;
                break;
            case 1:
                int anio = Integer.valueOf(comboAnioHasta.getSelectedItem().toString());
                if (((anio % 4 == 0)
                        && !(anio % 100 == 0))
                        || (anio % 400 == 0)) {
                    maxDia = 29;
                } else {
                    maxDia = 28;
                }
                break;
            default:
                maxDia = 31;
        }
        DefaultComboBoxModel defaultComboBoxModel = new DefaultComboBoxModel();
        for (int recorrido = 1; recorrido <= maxDia; recorrido++) {
            if (recorrido < 10) {
                defaultComboBoxModel.addElement("0" + recorrido);
            } else {
                defaultComboBoxModel.addElement(recorrido);
            }
        }
        if (dia < 10) {
            defaultComboBoxModel.setSelectedItem("0" + dia);
        } else {
            defaultComboBoxModel.setSelectedItem(dia);
        }
        comboDiaHasta.setModel(defaultComboBoxModel);
    }

    private void mostrarBasesDatos() {
        DefaultComboBoxModel defaultComboBoxModel = InicializarCombo.inicializarCombo(new DefaultComboBoxModel(), "Seleccione Empresa.");
        for (String base : expertoRemito.buscarBasesDatos()) {
            defaultComboBoxModel.addElement(base);
        }
        comboBase.setModel(defaultComboBoxModel);
    }

    private void cargarClientes(String empresa) {
        DefaultComboBoxModel defaultComboBoxModel = InicializarCombo.inicializarCombo(new DefaultComboBoxModel(), "TODOS");
        for (String cliente : expertoRemito.obtenerClientes(empresa)) {
            defaultComboBoxModel.addElement(cliente);
        }
        comboClientes.setModel(defaultComboBoxModel);
    }

    private void cargarRemitosCliente(String cliente, String fechaDesde, String fechaHasta) {
        remitos = expertoRemito.obtenerRemitosCliente(cliente, fechaDesde, fechaHasta);
        cargarTabla(remitos);
    }

    private void cargarRemitos(String fechaDesde, String fechaHasta) {
        remitos = expertoRemito.obtenerRemitos(fechaDesde, fechaHasta);
        cargarTabla(remitos);
    }

    private void cargarTabla(List<DtoRemito> remitos) {
        DefaultTableModel defaultTableModel = new DefaultTableModel();
        defaultTableModel.addColumn("Cliente");
        defaultTableModel.addColumn("Nro Remito");
        defaultTableModel.addColumn("Fecha");
        defaultTableModel.addColumn("Articulo");
        defaultTableModel.addColumn("Cantidad");
        defaultTableModel.addColumn("Cant Pendiente");
        for (DtoRemito remito : remitos) {
            Object[] fila = new Object[6];
            fila[0] = remito.getCliente();
            fila[1] = remito.getNroRemito();
            fila[2] = remito.getFecha();
            fila[3] = remito.getArticulo();
            fila[4] = remito.getCantidad();
            fila[5] = remito.getCantidadPendiente();
            defaultTableModel.addRow(fila);
        }
        tablaRemitos.setModel(defaultTableModel);
    }

}
